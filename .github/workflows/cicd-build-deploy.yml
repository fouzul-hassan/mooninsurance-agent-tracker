name: Build and Deploy MoonInsurance Services

on:
  push:
    branches:
      - main

jobs:
  change-to-blue:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to DigitalOcean container registry
      - name: Log in to DigitalOcean
        run: echo "${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" | docker login registry.digitalocean.com -u doctl --password-stdin

      # Build and push Aggregator Service
      - name: Build and push Aggregator Service
        run: |
          docker build --no-cache -t registry.digitalocean.com/moonregistry/aggregate-service:latest ./aggregatorService
          docker push registry.digitalocean.com/moonregistry/aggregate-service:latest  

      # Set up doctl and kubeconfig
      - name: Set up doctl and kubeconfig
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubeconfig
        run: doctl kubernetes cluster kubeconfig save k8s-1-31-1-do-5-sgp1-1734795051852

      - name: Deploy Aggregator CronJob and Blue Ingress
        run: |
          kubectl apply -f ingress-blue.yaml
          kubectl delete cronjob aggregator-cronjob --ignore-not-found
          kubectl apply -f ./aggregatorService/aggregator-cronjob.yaml

  build-green:
    needs: change-to-blue
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DigitalOcean
        run: echo "${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" | docker login registry.digitalocean.com -u doctl --password-stdin

      # Build and push all green services
      - name: Build and push Agent Service green
        run: |
          docker build --no-cache -t registry.digitalocean.com/moonregistry/agent-service:green ./agent-service
          docker push registry.digitalocean.com/moonregistry/agent-service:green

      - name: Build and push Integration Service green
        run: |
          docker build --no-cache -t registry.digitalocean.com/moonregistry/integration-service:green ./integration-service
          docker push registry.digitalocean.com/moonregistry/integration-service:green

      - name: Build and push Notification Service green
        run: |
          docker build --no-cache -t registry.digitalocean.com/moonregistry/notification-service:green ./notification-service
          docker push registry.digitalocean.com/moonregistry/notification-service:green

  deploy-green:
    needs: build-green  
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up doctl and kubeconfig
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubeconfig
        run: doctl kubernetes cluster kubeconfig save k8s-1-31-1-do-5-sgp1-1734795051852

      - name: Apply Green Deployments
        run: |
          kubectl apply -f ./agent-service/agent-green-deployment.yaml
          kubectl apply -f ./integration-service/integration-green-deployment.yaml
          kubectl apply -f ./notification-service/notification-green-deployment.yaml
          kubectl rollout restart deployment agent-service-green
          kubectl rollout restart deployment integration-service-green
          kubectl rollout restart deployment notification-service-green

  build-blue:
    needs: deploy-green
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DigitalOcean
        run: echo "${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" | docker login registry.digitalocean.com -u doctl --password-stdin

      # Build and push all blue services
      - name: Build and push Agent Service blue
        run: |
          docker build --no-cache -t registry.digitalocean.com/moonregistry/agent-service:blue ./agent-service
          docker push registry.digitalocean.com/moonregistry/agent-service:blue

      - name: Build and push Integration Service blue
        run: |
          docker build --no-cache -t registry.digitalocean.com/moonregistry/integration-service:blue ./integration-service
          docker push registry.digitalocean.com/moonregistry/integration-service:blue

      - name: Build and push Notification Service blue
        run: |
          docker build --no-cache -t registry.digitalocean.com/moonregistry/notification-service:blue ./notification-service
          docker push registry.digitalocean.com/moonregistry/notification-service:blue

  deploy-blue:
    needs: build-blue
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up do
